
在服务器上查看MYSQL的版本
	mysql --help|grep Distrib
	
默认表名
	如：select * from dual ...;

新建数据表
CREATE TABLE `TABLE_NAME`(
	`ID` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '字段注释信息',
	`fieldName` type DEFAULT NULL COMMENT '字段注释信息',
	`fieldName` type DEFAULT NULL COMMENT '字段注释信息',
	PRIMARY KEY (`ID`),
	UNIQUE KEY `uniquekeyName` (`fieldName`,`fieldName`...)
)ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=UTF8 COMMENT '表注释信息';

插入语句：若表中有自增序列，则可以将该列置未‘0’ 或 ‘null’,这样mysql将会自动处理该列
	如：INSERT INTO tableName values(0,'name');
	INSERT INTO tableName(属性1，属性2...) SELECT '值1','值2'... FROM tableName WHERE ...
	
	
更新数据：
	UPDATE [LOW_PRIORITY] [IGNORE] tableName
	SET assignment_list
	[WHERE where_condition]
	[ORDER BY ...]
	[LIMIT ROW_COUNT]

删除表
	DROP TABLE tableName;

清除表中所有的数据，但不删除表
	DELETE TABLE tableName;

删除数据
	DELETE [LOW_PRIORITY] [QUICK] [IGNORE]
	FROM
	  tbl_name [PARTITION (partition_name[,partition_name]...)]
	[WHERE where_condition ]
	[ORDER BY ...]
	[LIMIT ROW_COUNT];

	
向表中添加字段
	ALTER TABLE tableName ADD fieldName type
	
表中删除字段
	ALTER TABLE tableName DROP fieldName
	
修改表中的字段名：
	ALTER TABLE tableName CHANGE oldFieldName newFieldName type
	
修改表的字段类型或长度
	ALTER TABLE tableName MODIFY COLUMN 字段名 类型 约束等;
	
修改表中字段的默认值
	ALTER TABLE 表民 ALTER COLUMN 字段名 SET DEFAULT 默认值;

STRING类型转换为DATE类型	
	SELECT STR_TO_DATE('20180211','%Y%m%d') AS d;

	SELECT STR_TO_DATE('102950','%H%i%s') AS t;

	SELECT STR_TO_DATE('20180211102950','%Y%m%d%H%i%s') AS t;
	
DATE类型转换为STRING类型
	SELECT DATE_FORMAT(NOW(),'%Y%m%d%H%i%s');
	
日期函数
	当前日期
	SELECT NOW() AS t;
	当前年月日
	SELECT CURDATE() AS d;
	当前时分秒
	SELECT CURTIME() AS t;
	当前日期减一分钟
	SELECT CURTIME() AS ct,DATE_SUB(CURTIME(),INTERVAL '0 0:1:0' DAY_SECOND) AS ct1;
	当前日期加一分钟
	SELECT CURTIME() AS ct,DATE_ADD(CURTIME(),INTERVAL '0 0:1:0' DAY_SECOND) AS ct1;
	
拼接两个字段
	SELECT CONCAT('1','2');


索引
	在mysql中若更新条件为非索引字段，则在做update操作时将对整张表进行锁定
	
	注意：索引字段长度不能超过767个字节，故varchar类型最多可以设置为255
	
	索引类型：
		primary:主键索引
		unique:唯一索引
		index或key:普通索引
		fulltext:全文索引
		
	添加索引:
		ALTER TABLE 表名 ADD 索引类型(primary,unique,index) [索引名](字段名(长度),字段名(长度)...);//此处‘长度’为某字段添加索引的长度，及短索引
		CREATE 索引类型(unique,index) 索引名 ON 表名(字段名,字段名...);
	
	删除索引:
		DROP INDEX 索引名 ON 表名;
		ALTER TABLE 表名 DROP INDEX 索引名;
		
	索引使用技巧：
		1.索引不会包含有null的列
			只要列中包含有null值，都将不会被包含在索引中，复合索引中只要有一列含有null值，那么这一列对于复合索引就是无效的。
		2.使用短索引
			如果有一个char(255)的列，如果在前10个或者20个字符内，多数值是唯一的，那么就不要对整个列进行索引，使用短索引。
		3.like语句操作
			一般情况下不要使用like操作，若要使用，like '%aaa%'不会使用索引，而 like 'aaa%'可以使用索引
		4.不适用 NOT IN 、<>、!=操作，但<,<=,=,>,>=,BETWEEN,IN是可以使用索引的
		5.不要在列上进行运算
		6.索引要建立在经常进行select操作的字段上
		7.索引要建立在值比较唯一的字段上
		8.对于那些定义为text，image，和bit数据类型的列不应该增加索引。
		9.在where和join中出现的列需要建立索引
		10.若where子句的查询条件里使用了函数，则索引无效
		11.在join操作中，mysql只有在主键和外键的数据类型相同时，才能使用索引，否则索引无效
		
	缺点：
		索引会降低更新表的速度，因为更新表时，mysql不仅要保存数据，还要保存一下索引文件。
		建立索引会占用磁盘空间的索引文件
		
	查看查询语句中索引使用情况
		EXPLAIN SELECT * FROM TABLE_NAME WHERE ...
		EXPLAIN列的解释：
			table:显示这一行的数据是关于哪张表的
			type:显示连接使用了何种类型。从最好到最差的连接类型为const，eq_reg，ref，range，indexhe和all
			possible_keys:显示可能应用在这张表中的索引，如果为空，没有可用的索引。可以为相关的域从WHERE语句中选择一个合适的语句
			key:实际使用的索引。如果为NULL，则没有使用索引。很少的情况下，MYSQL会选择优化不足的索引。这种情况下，可以在select语句中使用USE INDEX (indexname) 来强制使用一个索引或者用IGNORE INDEX (indexname) 来强制MYSQL忽略索引
			key_len:使用的索引的长度，在不损失精确性的情况下，长度越短越好
			ref:显示索引的哪一列被使用了，如果可能的话，是一个常数
			rows:MYSQL认为必须检查的用来返回请求数据的行数
			Extra:关于MQSQL如何解析查询的额外信息。
		
Limit 使用，获取指定结果集数量
SELECT * FROM tableName LIMIT [offset,]rows|rows;
	
	