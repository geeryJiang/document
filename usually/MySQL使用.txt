
插入语句：若表中有自增序列，则可以将该列置未‘0’ 或 ‘null’,这样mysql将会自动处理该列
	如：insert into tableName values(0,'name');
	
向表中添加字段
	ALTER TABLE tableName ADD fieldName type
	
表中删除字段
	ALTER TABLE tableName DROP fieldName
	
修改表中的字段名：
	ALTER TABLE tableName CHANGE oldFieldName newFieldName type
	
修改表的字段类型或长度
	ALTER TABLE tableName MODIFY COLUMN 字段名 类型 约束等;
	
修改表中字段的默认值
	ALTER TABLE 表民 ALTER COLUMN 字段名 SET DEFAULT 默认值;

STRING类型转换为DATE类型	
	SELECT STR_TO_DATE('20180211','%Y%m%d') AS d;

	SELECT STR_TO_DATE('102950','%H%i%s') AS t;

	SELECT STR_TO_DATE('20180211102950','%Y%m%d%H%i%s') AS t;
	
DATE类型转换为STRING类型
	SELECT DATE_FORMAT(NOW(),'%Y%m%d%H%i%s');
	
日期函数
	当前日期
	SELECT NOW() AS t;
	当前年月日
	SELECT CURDATE() AS d;
	当前时分秒
	SELECT CURTIME() AS t;
	当前日期减一分钟
	SELECT CURTIME() AS ct,DATE_SUB(CURTIME(),INTERVAL '0 0:1:0' DAY_SECOND) AS ct1;
	当前日期加一分钟
	SELECT CURTIME() AS ct,DATE_ADD(CURTIME(),INTERVAL '0 0:1:0' DAY_SECOND) AS ct1;
	
拼接两个字段
	SELECT CONCAT('1','2');
	
查看查询语句中索引使用情况
	EXPLAIN SELECT * FROM TABLE_NAME WHERE ...
	EXPLAIN列的解释：
		table:显示这一行的数据是关于哪张表的
		type:显示连接使用了何种类型。从最好到最差的连接类型为const，eq_reg，ref，range，indexhe和all
		possible_keys:显示可能应用在这张表中的索引，如果为空，没有可用的索引。可以为相关的域从WHERE语句中选择一个合适的语句
		key:实际使用的索引。如果为NULL，则没有使用索引。很少的情况下，MYSQL会选择优化不足的索引。这种情况下，可以在select语句中使用USE INDEX (indexname) 来强制使用一个索引或者用IGNORE INDEX (indexname) 来强制MYSQL忽略索引
		key_len:使用的索引的长度，在不损失精确性的情况下，长度越短越好
		ref:显示索引的哪一列被使用了，如果可能的话，是一个常数
		rows:MYSQL认为必须检查的用来返回请求数据的行数
		Extra:关于MQSQL如何解析查询的额外信息。
	
	
	